#! /usr/bin/bash

info() {
  echo -e "\e[1;32m${@}\e[0m"
}

link_file() {
  rm -rf "$2"
  ln -sv "$1" "$2"
}

nvim() {
  info "install nvim-nightly"
  while [ ! -e ./nvim-linux-x86_64.tar.gz ]; do
    curl -fLO "https://github.com/neovim/neovim/releases/download/nightly/nvim-linux-x86_64.tar.gz"
  done
  tar -xvf nvim-linux-x86_64.tar.gz
  sudo cp -r nvim-linux-x86_64/* /usr/local
  rm -rf nvim-linux-x86_64*
}

init() {
  sudo pacman -S git base-devel
  sudo pacman  --noconfirm -Syu zsh-autosuggestions  zsh-completions  zsh-syntax-highlighting \
    python3 python-pip python-msgpack python-black python-ruff cmake ninja gcc clang curl unzip jq ripgrep lua-language-server proxychains \
    tree-sitter nodejs npm rustup rust-analyzer go gopls lua-language-server stylua fzf lazygit


  rustup default stable

  sudo chsh -s /bin/zsh mdd

  npm config set registry https://registry.npmmirror.com/
  sudo npm config set registry https://registry.npmmirror.com/
  pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
  sudo pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
  go env -w GO111MODULE=on
  go env -w GOPROXY=https://goproxy.cn,direct
  sudo go env -w GO111MODULE=on
  sudo go env -w GOPROXY=https://goproxy.cn,direct
  sudo npm i -g bash-language-server pyright vscode-langservers-extracted typescript typescript-language-server
  [ -e ${CARGO_HOME} ] || mkdir -vp ${CARGO_HOME:-$XDG_DATA_HOME/cargo}
cat << EOF | tee -a ${CARGO_HOME:-$XDG_DATA_HOME}/config.toml
[source.crates-io]
replace-with = "ustc"

[source.ustc]
registry = "sparse+https://mirrors.ustc.edu.cn/crates.io-index/"

[registries.ustc]
index = "sparse+https://mirrors.ustc.edu.cn/crates.io-index/"

EOF

}

install() {
  info "install dotfiles"
  local dotfiles="${HOME}/.dotfiles"
  local dotfiles_home="${dotfiles}/home"
  local dotfiles_config="${dotfiles}/config"

  shopt -s dotglob
  for filename in ${dotfiles_home}/*; do
    filename=$(basename $filename)
    link_file "${dotfiles_home}/${filename}" "${HOME}/${filename}"
  done
  shopt -u dotglob

  for filename in ${dotfiles_config}/*; do
    filename=$(basename $filename)
    link_file "${dotfiles_config}/${filename}" "${HOME}/.config/${filename}"
  done
  info "Dotfiles successfuly installed!"
}

main() {
  if [[ $# -eq 0 ]]; then
    exit 1
  else
    for fn in $@; do
      ${fn}
    done
  fi
}

main "$@"
